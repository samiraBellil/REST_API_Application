{"ast":null,"code":"import _defineProperty from \"/home/samira/Desktop/Work_DOC/raect-frontend-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/samira/Desktop/Work_DOC/raect-frontend-app/src/components/AddTodo.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AddItem, ChangeInput } from '../actions/action';\nimport uuid from 'uuid';\n\nclass AddTodo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.props.changeInput(event.target.value);\n    };\n\n    this.state = {\n      term: \"\",\n      complete: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AddToDo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"To-Do App !\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Add New To-Do\"), React.createElement(\"input\", {\n      className: \"Part-text\",\n      type: \"text\",\n      placeholder: \"Enter new task\",\n      value: this.props.todos.termInput,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"add-btn\",\n      onClick: () => this.props.add(_objectSpread({}, this.state, {\n        id: uuid()\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todosReducer\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    add: x => dispatch(AddItem(x)),\n    changeInput: x => dispatch(ChangeInput(x))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo);","map":{"version":3,"sources":["/home/samira/Desktop/Work_DOC/raect-frontend-app/src/components/AddTodo.js"],"names":["React","Component","connect","AddItem","ChangeInput","uuid","AddTodo","constructor","props","onChange","event","changeInput","target","value","state","term","complete","render","todos","termInput","add","id","mapStateToProps","todosReducer","mapDispatchToProps","dispatch","x"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,mBAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAGA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC5BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,QAPmB,GAOPC,KAAD,IAAW;AAClB,WAAKF,KAAL,CAAWG,WAAX,CAAuBD,KAAK,CAACE,MAAN,CAAaC,KAApC;AACH,KATkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAKDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,WAAW,EAAC,gBAArD;AAAsE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,SAA9F;AAAyG,MAAA,QAAQ,EAAE,KAAKV,QAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAG,MAAM,KAAKD,KAAL,CAAWY,GAAX,mBAAmB,KAAKN,KAAxB;AAA+BO,QAAAA,EAAE,EAAEhB,IAAI;AAAvC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAJJ,CADJ,CADJ;AAcH;;AA3B2B;;AA6BhC,MAAMiB,eAAe,GAAIR,KAAD,IAAW;AAC/B,SAAO;AACHI,IAAAA,KAAK,EAAEJ,KAAK,CAACS;AADV,GAAP;AAGH,CAJD;;AAKA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAM;AACFL,IAAAA,GAAG,EAAEM,CAAC,IAAID,QAAQ,CAACtB,OAAO,CAACuB,CAAD,CAAR,CADhB;AAEFf,IAAAA,WAAW,EAAGe,CAAC,IAAID,QAAQ,CAACrB,WAAW,CAACsB,CAAD,CAAZ;AAFzB,GAAN;AAIH;;AACD,eAAexB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {AddItem, ChangeInput} from '../actions/action';\nimport uuid from 'uuid';\n\n\nclass AddTodo extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            term :\"\",\n            complete: false\n        }\n    }\n    onChange = (event) => {\n        this.props.changeInput(event.target.value)\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"AddToDo\">\n                    <h1>To-Do App !</h1>\n                    <h5>Add New To-Do</h5>\n                    <input className=\"Part-text\" type=\"text\" placeholder=\"Enter new task\" value={this.props.todos.termInput} onChange={this.onChange} />\n                    <div className=\"add-button\">\n                        <button className=\"add-btn\" onClick= {() => this.props.add({...this.state, id: uuid()})}>Add</button>\n                        {/* <button  onClick= {() => this.props.todos.filter(el => el.edit === true) ? this.props.add({...this.state, id: uuid()}) : this.props.toDos.map(el => el.edit === true && this.props.edit({...el, term: this.state.term})) }>\n                            Add</button> */}\n                    </div>    \n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        todos: state.todosReducer\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return{\n        add: x => dispatch(AddItem(x)),\n        changeInput : x => dispatch(ChangeInput(x))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo);"]},"metadata":{},"sourceType":"module"}