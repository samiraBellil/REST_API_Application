{"ast":null,"code":"import _defineProperty from \"/home/samira/Desktop/Work_DOC/raect-frontend-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_ITEM, CHANGE_INPUT } from '../actions/types';\nimport { DELETE_ITEM } from '../actions/types';\nimport { COMPLETE_ITEM } from '../actions/types';\nimport { EDIT_ITEM } from '../actions/types';\nimport uuid from 'uuid';\nconst initialstate = {\n  items: [{\n    term: \"todo 1\",\n    complete: false,\n    id: uuid()\n  }],\n  termInput: \"aaaaaaaaa\"\n};\n\nconst todosReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case ADD_ITEM:\n      return [...state.items, action.payload];\n\n    case DELETE_ITEM:\n      return state.items.filter(el => el.id !== action.payload);\n\n    case COMPLETE_ITEM:\n      return state.items.map(el => el.id === action.payload ? _objectSpread({}, el, {\n        complete: !el.complete\n      }) : el);\n    // case EDIT_ITEM:\n    //     return state.map(el => el.id === action.payload.id ? {...el, edit: !el.edit, term: action.payload.term} : el)\n\n    case CHANGE_INPUT:\n      return state.termInput = action.payload.term;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;","map":{"version":3,"sources":["/home/samira/Desktop/Work_DOC/raect-frontend-app/src/reducers/rootReducer.js"],"names":["ADD_ITEM","CHANGE_INPUT","DELETE_ITEM","COMPLETE_ITEM","EDIT_ITEM","uuid","initialstate","items","term","complete","id","termInput","todosReducer","state","action","type","payload","filter","el","map"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,YAAnB,QAAsC,kBAAtC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,KAAK,EAAG,CAAC;AAACC,IAAAA,IAAI,EAAG,QAAR;AAAmBC,IAAAA,QAAQ,EAAG,KAA9B;AAAsCC,IAAAA,EAAE,EAAEL,IAAI;AAA9C,GAAD,CAAT;AAA8DM,EAAAA,SAAS,EAAG;AAA1E,CAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,QAAL;AACI,aAAO,CAAC,GAAGa,KAAK,CAACN,KAAV,EAAiBO,MAAM,CAACE,OAAxB,CAAP;;AACJ,SAAKd,WAAL;AACI,aAAOW,KAAK,CAACN,KAAN,CAAYU,MAAZ,CAAmBC,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUI,MAAM,CAACE,OAA1C,CAAP;;AACJ,SAAKb,aAAL;AACI,aAAOU,KAAK,CAACN,KAAN,CAAYY,GAAZ,CAAgBD,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUI,MAAM,CAACE,OAAjB,qBAAgCE,EAAhC;AAAoCT,QAAAA,QAAQ,EAAE,CAACS,EAAE,CAACT;AAAlD,WAA+DS,EAArF,CAAP;AACJ;AACA;;AAEA,SAAKjB,YAAL;AACI,aAAOY,KAAK,CAACF,SAAN,GAAkBG,MAAM,CAACE,OAAP,CAAeR,IAAxC;;AACJ;AACI,aAAOK,KAAP;AAbR;AAeH,CAhBD;;AAiBA,eAAeD,YAAf","sourcesContent":["import { ADD_ITEM ,CHANGE_INPUT} from '../actions/types';\nimport { DELETE_ITEM } from '../actions/types';\nimport { COMPLETE_ITEM } from '../actions/types';\nimport { EDIT_ITEM } from '../actions/types';\nimport uuid from 'uuid'\n\nconst initialstate = {items : [{term : \"todo 1\" , complete : false , id :uuid()}], termInput : \"aaaaaaaaa\"}\n\nconst todosReducer = (state = initialstate, action) => {\n    switch (action.type) {\n        case ADD_ITEM:\n            return [...state.items, action.payload]\n        case DELETE_ITEM:\n            return state.items.filter(el => el.id !== action.payload)\n        case COMPLETE_ITEM:\n            return state.items.map(el => el.id === action.payload ? { ...el, complete: !el.complete } : el)\n        // case EDIT_ITEM:\n        //     return state.map(el => el.id === action.payload.id ? {...el, edit: !el.edit, term: action.payload.term} : el)\n\n        case CHANGE_INPUT:\n            return state.termInput = action.payload.term\n        default:\n            return state;\n    }\n}\nexport default todosReducer;"]},"metadata":{},"sourceType":"module"}