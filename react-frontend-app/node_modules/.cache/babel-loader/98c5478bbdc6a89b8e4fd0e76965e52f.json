{"ast":null,"code":"import _defineProperty from \"/home/samira/Desktop/Work_DOC/react-frontend-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/samira/Desktop/Work_DOC/react-frontend-app/src/components/ContactCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MDBIcon } from 'mdbreact';\nimport { remove, editContact } from '../actions/actionsContact';\nimport ModalComponent from './ModalComponent';\nimport axios from 'axios';\n\nclass ContactCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.edit = () => {\n      this.props.updateMovie(_objectSpread({}, this.state, {\n        id: this.props.infos.id\n      }));\n    };\n\n    this.state = {\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/contacts').then(result => this.setState({\n      contacts: result.data\n    }));\n  }\n\n  render() {\n    const contact = this.props.contact;\n    return (// {this.state.users.map(user => <div>{user.name}</div>)}\n      //  {this.state.contacts && this.state.contacts.map(el => ( <div><h1>{el.name}</h1> </div> ))} \n      React.createElement(\"div\", {\n        className: \"col-12 col-sm-6 col-md-4 col-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"our-team \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img-fluid\",\n        src: contact.picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"team-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, contact.name), React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Tel : \", contact.phone), React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Email : \", contact.mail)), React.createElement(\"ul\", {\n        className: \"social\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(ModalComponent, {\n        infos: contact,\n        editMode: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        onClick: () => this.props.deleteContact(contact.id),\n        class: \"btn-floating btn-sm btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        icon: \"trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })))))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteContact: id => dispatch(remove(id)),\n    edit: y => dispatch(editContact(y))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactCard);","map":{"version":3,"sources":["/home/samira/Desktop/Work_DOC/react-frontend-app/src/components/ContactCard.js"],"names":["React","Component","connect","MDBIcon","remove","editContact","ModalComponent","axios","ContactCard","constructor","props","edit","updateMovie","state","id","infos","users","componentDidMount","get","then","result","setState","contacts","data","render","contact","picture","name","phone","mail","deleteContact","mapDispatchToProps","dispatch","y"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { MDBIcon } from 'mdbreact';\nimport { remove, editContact } from '../actions/actionsContact'\nimport ModalComponent from './ModalComponent'\nimport axios from 'axios'\nclass ContactCard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: []\n        }\n    }\n    componentDidMount() {\n        axios.get('/contacts')\n            .then(result => this.setState({ contacts: result.data }))\n    }\n    edit = () => {\n        this.props.updateMovie({ ...this.state, id: this.props.infos.id })\n    }\n    render() {\n        const { contact } = this.props;\n        return (\n            // {this.state.users.map(user => <div>{user.name}</div>)}\n            //  {this.state.contacts && this.state.contacts.map(el => ( <div><h1>{el.name}</h1> </div> ))} \n            <div className=\"col-12 col-sm-6 col-md-4 col-lg-3\">\n                <div className=\"our-team \">\n                    <div className=\"picture\">\n                        <img className=\"img-fluid\" src={contact.picture} />\n                    </div>\n                    <div className=\"team-content\">\n                        <h3 className=\"name\">{contact.name}</h3>\n                        <h4 className=\"title\">Tel : {contact.phone}</h4>\n                        <h4 className=\"title\">Email : {contact.mail}</h4>\n                    </div>\n                    <ul className=\"social\">\n                        <ModalComponent infos={contact} editMode={true} />\n                        <a onClick={() => this.props.deleteContact(contact.id)} class=\"btn-floating btn-sm btn-light\"><MDBIcon icon=\"trash\" /></a>\n                        {/* <a onClick={this.edit} class=\"btn-floating btn-sm btn-light\"><MDBIcon icon=\"user-edit\" /></a> */}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteContact: id => dispatch(remove(id)),\n        edit: y => dispatch(editContact(y)),\n    }\n}\nexport default connect(null, mapDispatchToProps)(ContactCard)"]},"metadata":{},"sourceType":"module"}